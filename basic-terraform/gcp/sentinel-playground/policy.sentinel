import "tfplan/v2" as tfplan

// Sentinel filter expression
machines = filter tfplan.resource_changes as _, resource_changes {
    resource_changes.address is "aws_instance.ubuntu" and
        resource_changes.mode is "managed" and
        (resource_changes.change.actions contains "create" or
            resource_changes.change.actions is ["update"])
}

// Mandatory Instance Tags
mandatory_tags = [
    "Name",
    "Other",
]

verify_machine = func(instance, mandatory_tags) {
  // print("mandatory_tags: " ,  mandatory_tags )
  // print("tags: " ,   keys(instance.change.after.tags) )
  validated = true
  for mandatory_tags as mt {
    print("trying: " ,  mt )
    if not ( instance.change.after.tags contains mt) {
      print("missing: " , mt, " from ", instance.address )
      validated = false
    }
  }
  return validated
} 

// Sentinel rule 
machine_rule4  = rule {
    all machines as _, instance { 
      verify_machine(instance, mandatory_tags)
    }
}
// Sentinel rule 
machine_rule2 = rule {
    all machines as _, instance { 
        instance.change.after.instance_type in allowed_machine_types
        
    }
}
main = rule {
  machine_rule4 else true
}

