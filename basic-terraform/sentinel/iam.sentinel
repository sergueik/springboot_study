# Sentinel policy to flag user accounts with high-privileged global roles in Google Cloud IAM
import "gcp.iam"

# Define the high-privileged global roles to flag
high_privileged_roles = [
  "roles/owner",
  "roles/editor",
  "roles/viewer"
  # Add any other roles considered high-privileged
]

# Function to check if the member is a user account
is_user_account = func(member) {
  return member matches "user:.*"
}

# Function to check if the member is a service account or group (these are allowed)
is_service_or_group_account = func(member) {
  return member matches "serviceAccount:.*" or
         member matches "group:.*"
}

# Check if any high-privileged global roles are assigned to user accounts
violation = rule {
  iam_bindings as bindings {
    # Iterate through all IAM bindings
    all bindings as binding {
      # Check if the role is in the high-privileged roles list
      binding.role in high_privileged_roles and
      # Check if any members are user accounts (flag them if so)
      any binding.members as member {
        is_user_account(member)
      }
    }
  }
}

# Define the enforcement block
enforce {
  violation as flagged_bindings {
    print("Violation: The following user accounts are assigned high-privileged global roles:")
    print(flagged_bindings)
  }

  # The enforcement will deny the policy if violations (user accounts with high-privileged roles) are found
  deny[violation]
}
