# This policy uses the Sentinel tfplan/v2 import to require that
# all GCE instances have machine types from an allowed list

# Import common-functions/tfplan-functions/tfplan-functions.sentinel
# with alias "plan"
import "tfplan-functions" as plan


filter2_attribute = func(resources, attr, forbidden, prtmsg) {

violators = {}
messages = {}

// print("z", z)
for resources as address, rc {
	// print("rc", rc)
	v = plan.evaluate_attribute(rc, attr) else null
	// print("v", v)
	# Check if the value is null
	if v is null {
		v = "null"
	}
	# Check if the value is in the forbidden list
	if v in forbidden {
		// print("v", v)
		# Add the resource and a warning message to the violators list
		message = plan.to_string(address) + " has " + v
		messages[address] = message
		violators[address] = rc
	}
}
results = {"resources": violators, "messages": messages}
   return results
}

allowed_types = ["roles/cloudfunctions.invoker"]
forbidden = ["allUsers"]

# Get all iam resources
all_resources = plan.find_resources("google_cloudfunctions_function_iam_member")

all_resources_with_member = plan.filter_attribute_in_list(all_resources, "role", allowed_types, false)
z = all_resources_with_member["resources"]


results = filter2_attribute(all_resources_with_member["resources"], "member", forbidden, true) 
print("res: ", results["messages"])
violations = length(results["messages"])

# Main rule
main = rule {
	violations is 0
}
